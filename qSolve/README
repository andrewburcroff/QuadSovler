README

 The Main gets the discriminant and sends a, b and discriminant to the mySqrt class where it will try to find the roots.
 First, it will find the first root by comparing the discriminant to be greater than 0.  If so then it will take the 
 negative of b and adding the square root of the discriminant then dividing the entire thing by 2*a. If the discriminant
 is equal to 0 then, it will take the negative of b and it will divide it by 2 *a.  If the discriminant is less than 0 then 
 it will return a negative 1. Then we will need to find the other root which we will do  very similar to root 1 but in
 case where discriminant is greater than 0 it will be taking the negative of b and subtracting the square root
 of the discriminant then dividing the entire thing by 2*a. Both other cases are similar.


Getting Started

This method will call three parameters. 
It will find the discriminant or what is in the square root part of the equation. 
Then it prints the discriminant, and return the value that it represents. 
First, it figure out the discriminant for by being the square part of the equation. 
Then, it prints out the value of the discriminant. 
Finally, it  will return discriminant value.
	
Installing
	In Order for this program to run it will need: mysqrt, q.solve , IO and main .c files.  	

Running the tests

Input: float a = 1, float b = 2 , and float c = 1

float getDiscriminant(float a, float b, float c) {
	float discriminant = b*b-(4*a*c);
	printf("discriminant is %.8lf\n", discriminant);
	return discriminant;
}

Output: return = 0

Authors
	Stephen Wimsatt
	Max Ellsberry
	Andrew Burcroff
	Mohammed Rasak
	
License
	This project is licensed under the WMU License.
Acknowledgments
	Dr. Kapenga of Western Michigan University Computer Science. 
